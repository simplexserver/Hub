local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\180\161","\82\154\143\80\156\180\233"),function(v42) if (v9(v42,2)==(226 -147)) then local v93=0;while true do if (v93==0) then v30=v8(v11(v42,1,1));return "";end end else local v94=0;local v95;while true do if (v94==0) then v95=v10(v8(v42,16));if v30 then local v118=v13(v95,v30);v30=nil;return v118;else return v95;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v96=0;local v97;while true do if (v96==0) then v97=(v43/(2^(v44-1)))%(2^(((v45-(1 -0)) -(v44-1)) + 1)) ;return v97-(v97%1) ;end end else local v98=2^(v44-(2 -1)) ;return (((v43%(v98 + v98))>=v98) and 1) or 0 ;end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (621 -(555 + 64)) ;v47=1;end if (v47==1) then return (v49 * 256) + v48 ;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end if (1==v50) then return (v54 * 16777216) + (v53 * (66467 -(857 + 74))) + (v52 * 256) + v51 ;end end end local function v35() local v55=v34();local v56=v34();local v57=569 -(367 + 201) ;local v58=(v31(v56,928 -(214 + 713) ,20) * (2^32)) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -1) or (1 + 0) ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v104=0;while true do if (v104==0) then v59=1;v57=0;break;end end end elseif (v59==2047) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/(2^52))) ;end local function v36(v61) local v62;if  not v61 then local v99=0;while true do if (0==v99) then v61=v34();if (v61==0) then return "";end break;end end end v62=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;local v63={};for v77=1, #v62 do v63[v77]=v10(v9(v11(v62,v77,v77)));end return v14(v63);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64=0;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v64==2) then for v105=1,v34() do local v106=0;local v107;while true do if (v106==0) then v107=v32();if (v31(v107,1,1)==0) then local v120=0;local v121;local v122;local v123;while true do if (v120==3) then if (v31(v122,3,3)==1) then v123[4]=v70[v123[4]];end v65[v105]=v123;break;end if (v120==1) then v123={v33(),v33(),nil,nil};if (v121==(1065 -(68 + 997))) then v123[3]=v33();v123[4]=v33();elseif (v121==1) then v123[3]=v34();elseif (v121==2) then v123[3]=v34() -((1272 -(226 + 1044))^16) ;elseif (v121==3) then v123[3]=v34() -(2^16) ;v123[4]=v33();end v120=2;end if (v120==0) then v121=v31(v107,2,3);v122=v31(v107,4,7 -1 );v120=1;end if (v120==2) then if (v31(v122,1,1)==1) then v123[2]=v70[v123[2]];end if (v31(v122,2,2)==1) then v123[3]=v70[v123[3]];end v120=3;end end end break;end end end for v108=1,v34() do v66[v108-1 ]=v39();end return v68;end if (v64==0) then v65={};v66={};v67={};v68={v65,v66,nil,v67};v64=1;end if (1==v64) then v69=v34();v70={};for v110=1,v69 do local v111=0;local v112;local v113;while true do if (v111==0) then v112=v32();v113=nil;v111=1;end if (1==v111) then if (v112==1) then v113=v32()~=(1637 -(1523 + 114)) ;elseif (v112==2) then v113=v35();elseif (v112==3) then v113=v36();end v70[v110]=v113;break;end end end v68[3 + 0 ]=v32();v64=2;end end end local function v40(v71,v72,v73) local v74=v71[4 -3 ];local v75=v71[2];local v76=v71[3];return function(...) local v79=v74;local v80=v75;local v81=v76;local v82=v38;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -(118 -(32 + 85)) ;local v88={};local v89={};for v100=0,v87 do if (v100>=v81) then v85[v100-v81 ]=v86[v100 + 1 ];else v89[v100]=v86[v100 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do v91=v79[v83];v92=v91[1];if (v92<=54) then if (v92<=26) then if (v92<=12) then if (v92<=5) then if (v92<=(2 + 0)) then if (v92<=(0 + 0)) then do return v89[v91[2]]();end elseif (v92==1) then local v172=v91[2];v89[v172]=v89[v172](v21(v89,v172 + 1 ,v84));elseif (v89[v91[2]]~=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=3) then local v133=0;local v134;local v135;local v136;while true do if (v133==1) then v136=0;for v383=v134,v91[4] do local v384=0;while true do if (0==v384) then v136=v136 + 1 ;v89[v383]=v135[v136];break;end end end break;end if (v133==0) then v134=v91[2];v135={v89[v134](v89[v134 + 1 ])};v133=1;end end elseif (v92==4) then v89[v91[2]][v89[v91[3]]]=v89[v91[4]];else do return;end end elseif (v92<=8) then if (v92<=6) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>7) then v89[v91[2]]=v91[3] + v89[v91[4]] ;else local v178=v89[v91[4]];if v178 then v83=v83 + 1 ;else local v385=0;while true do if (v385==0) then v89[v91[2]]=v178;v83=v91[960 -(892 + 65) ];break;end end end end elseif (v92<=10) then if (v92>9) then local v179=v91[2];v89[v179]=v89[v179]();else local v181=v91[2];v84=(v181 + v90) -(2 -1) ;for v326=v181,v84 do local v327=0;local v328;while true do if (v327==0) then v328=v85[v326-v181 ];v89[v326]=v328;break;end end end end elseif (v92>11) then local v182=v91[2];local v183,v184=v82(v89[v182](v21(v89,v182 + 1 ,v84)));v84=(v184 + v182) -1 ;local v185=0;for v329=v182,v84 do v185=v185 + 1 ;v89[v329]=v183[v185];end else local v186=0;local v187;while true do if (0==v186) then v187=v91[3 -1 ];v89[v187](v89[v187 + 1 ]);break;end end end elseif (v92<=19) then if (v92<=15) then if (v92<=(23 -10)) then v89[v91[2]]={};elseif (v92==14) then local v188=v80[v91[3]];local v189;local v190={};v189=v18({},{[v7("\12\52\65\64\57\0\217","\210\83\107\40\46\93\101\161")]=function(v332,v333) local v334=0;local v335;while true do if (v334==0) then v335=v190[v333];return v335[1][v335[2]];end end end,[v7("\233\191\32\55\193\137\32\54\211\152","\82\182\224\78")]=function(v336,v337,v338) local v339=0;local v340;while true do if (v339==0) then v340=v190[v337];v340[1][v340[2]]=v338;break;end end end});for v341=1,v91[4] do local v342=0;local v343;while true do if (0==v342) then v83=v83 + (351 -(87 + 263)) ;v343=v79[v83];v342=1;end if (v342==1) then if (v343[1]==91) then v190[v341-1 ]={v89,v343[3]};else v190[v341-1 ]={v72,v343[3]};end v88[ #v88 + 1 ]=v190;break;end end end v89[v91[2]]=v40(v188,v189,v73);else local v192=v91[182 -(67 + 113) ];local v193=v89[v192];local v194=v89[v192 + 2 ];if (v194>0) then if (v193>v89[v192 + 1 ]) then v83=v91[3];else v89[v192 + 3 ]=v193;end elseif (v193<v89[v192 + 1 ]) then v83=v91[3 + 0 ];else v89[v192 + 3 ]=v193;end end elseif (v92<=17) then if (v92==(39 -23)) then if v89[v91[2 + 0 ]] then v83=v83 + 1 ;else v83=v91[3];end else local v195=0;local v196;local v197;local v198;local v199;while true do if (v195==1) then v84=(v198 + v196) -1 ;v199=0;v195=2;end if (2==v195) then for v454=v196,v84 do v199=v199 + 1 ;v89[v454]=v197[v199];end break;end if (v195==0) then v196=v91[2];v197,v198=v82(v89[v196](v21(v89,v196 + 1 ,v91[11 -8 ])));v195=1;end end end elseif (v92>18) then v89[v91[2]]=v89[v91[3]]%v91[4] ;else v89[v91[2]]=v89[v91[3]] -v89[v91[4]] ;end elseif (v92<=22) then if (v92<=20) then local v138=v91[2];v89[v138](v21(v89,v138 + (953 -(802 + 150)) ,v91[7 -4 ]));elseif (v92==21) then local v202=v91[3];local v203=v89[v202];for v344=v202 + 1 ,v91[4] do v203=v203   .. v89[v344] ;end v89[v91[2]]=v203;else v89[v91[2]]=v91[3]~=0 ;end elseif (v92<=24) then if (v92==23) then v89[v91[2]][v91[3]]=v91[4];elseif (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==(45 -20)) then local v208=0;local v209;while true do if (0==v208) then v209=v91[2];v89[v209]=v89[v209](v21(v89,v209 + 1 + 0 ,v91[3]));break;end end else local v210=0;local v211;while true do if (v210==0) then v211=v91[2];do return v89[v211](v21(v89,v211 + 1 ,v84));end break;end end end elseif (v92<=40) then if (v92<=33) then if (v92<=(1026 -(915 + 82))) then if (v92<=27) then local v139=v91[2];v89[v139]=v89[v139](v21(v89,v139 + 1 ,v84));elseif (v92==28) then local v212=0;local v213;local v214;while true do if (v212==1) then v89[v213 + 1 + 0 ]=v214;v89[v213]=v214[v91[4]];break;end if (v212==0) then v213=v91[2];v214=v89[v91[8 -5 ]];v212=1;end end else v83=v91[3];end elseif (v92<=31) then if (v92==30) then v89[v91[2]]=v91[3];else v89[v91[2]]();end elseif (v92>32) then v89[v91[2]]=v91[3]~=0 ;else do return v89[v91[2]];end end elseif (v92<=36) then if (v92<=34) then local v141=0;local v142;local v143;local v144;while true do if (v141==1) then v144=v89[v142 + 2 ];if (v144>(0 -0)) then if (v143>v89[v142 + 1 ]) then v83=v91[3];else v89[v142 + 3 ]=v143;end elseif (v143<v89[v142 + 1 ]) then v83=v91[3];else v89[v142 + 3 ]=v143;end break;end if (v141==0) then v142=v91[2];v143=v89[v142];v141=1;end end elseif (v92>35) then local v219=0;local v220;local v221;local v222;local v223;while true do if (0==v219) then v220=v91[2];v221,v222=v82(v89[v220](v89[v220 + 1 ]));v219=1;end if (v219==1) then v84=(v222 + v220) -1 ;v223=1187 -(1069 + 118) ;v219=2;end if (v219==2) then for v457=v220,v84 do local v458=0;while true do if (0==v458) then v223=v223 + 1 ;v89[v457]=v221[v223];break;end end end break;end end else v89[v91[4 -2 ]]=v72[v91[3]];end elseif (v92<=38) then if (v92==(80 -43)) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==39) then v89[v91[2]]=v89[v91[3]]%v91[4] ;else v89[v91[2]]= #v89[v91[3]];end elseif (v92<=47) then if (v92<=43) then if (v92<=41) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v92==42) then local v229=0;local v230;while true do if (v229==0) then v230=v91[2];do return v21(v89,v230,v84);end break;end end else v89[v91[2]]=v91[3];end elseif (v92<=45) then if (v92>44) then local v233=v91[2];v89[v233]=v89[v233](v89[v233 + 1 ]);else local v235=0;local v236;while true do if (v235==0) then v236=v91[2];v89[v236](v21(v89,v236 + 1 + 0 ,v91[3]));break;end end end elseif (v92>46) then local v237=v91[2];v89[v237](v21(v89,v237 + 1 ,v84));else local v238=v91[2];local v239={};for v348=1, #v88 do local v349=0;local v350;while true do if (v349==0) then v350=v88[v348];for v486=0, #v350 do local v487=0;local v488;local v489;local v490;while true do if (v487==1) then v490=v488[2];if ((v489==v89) and (v490>=v238)) then local v522=0;while true do if (v522==0) then v239[v490]=v489[v490];v488[1]=v239;break;end end end break;end if (v487==0) then v488=v350[v486];v489=v488[1];v487=1;end end end break;end end end end elseif (v92<=50) then if (v92<=48) then local v147=0;local v148;while true do if (v147==0) then v148=v91[2];v89[v148]=v89[v148](v21(v89,v148 + 1 ,v91[3]));break;end end elseif (v92>49) then local v240=0;local v241;local v242;local v243;local v244;while true do if (0==v240) then v241=v91[3 -1 ];v242,v243=v82(v89[v241](v21(v89,v241 + 1 ,v91[3])));v240=1;end if (v240==1) then v84=(v243 + v241) -1 ;v244=0;v240=2;end if (v240==2) then for v460=v241,v84 do v244=v244 + 1 ;v89[v460]=v242[v244];end break;end end else local v245=v91[2];do return v89[v245](v21(v89,v245 + 1 ,v91[3]));end end elseif (v92<=52) then if (v92>51) then v89[v91[2]][v89[v91[3 + 0 ]]]=v89[v91[4]];else local v248=v91[2];local v249={v89[v248](v21(v89,v248 + 1 ,v84))};local v250=0;for v353=v248,v91[4] do local v354=0;while true do if (v354==0) then v250=v250 + 1 ;v89[v353]=v249[v250];break;end end end end elseif (v92>53) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=82) then if (v92<=68) then if (v92<=61) then if (v92<=57) then if (v92<=55) then v89[v91[2]][v91[794 -(368 + 423) ]]=v91[4];elseif (v92==56) then local v251=v91[2];v84=(v251 + v90) -1 ;for v355=v251,v84 do local v356=0;local v357;while true do if (v356==0) then v357=v85[v355-v251 ];v89[v355]=v357;break;end end end else local v252=0;local v253;while true do if (v252==0) then v253=v91[2];v89[v253](v21(v89,v253 + 1 ,v84));break;end end end elseif (v92<=59) then if (v92>58) then local v254=v91[2];do return v89[v254](v21(v89,v254 + 1 ,v91[3]));end else v89[v91[2]]=v89[v91[3]]/v91[4] ;end elseif (v92==60) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else do return v89[v91[2]]();end end elseif (v92<=64) then if (v92<=62) then local v151=v91[2];local v152=v91[4];local v153=v151 + 2 ;local v154={v89[v151](v89[v151 + 1 ],v89[v153])};for v168=3 -2 ,v152 do v89[v153 + v168 ]=v154[v168];end local v155=v154[19 -(10 + 8) ];if v155 then local v256=0;while true do if (0==v256) then v89[v153]=v155;v83=v91[3];break;end end else v83=v83 + 1 ;end elseif (v92==63) then local v257=0;local v258;local v259;while true do if (v257==1) then for v467=v258 + 1 ,v84 do v15(v259,v89[v467]);end break;end if (0==v257) then v258=v91[2];v259=v89[v258];v257=1;end end else local v260=v91[2];do return v21(v89,v260,v260 + v91[3] );end end elseif (v92<=66) then if (v92>65) then local v261=0;local v262;local v263;local v264;while true do if (v261==1) then v264=v89[v262] + v263 ;v89[v262]=v264;v261=2;end if (0==v261) then v262=v91[7 -5 ];v263=v89[v262 + 2 ];v261=1;end if (v261==2) then if (v263>0) then if (v264<=v89[v262 + 1 ]) then local v505=0;while true do if (v505==0) then v83=v91[445 -(416 + 26) ];v89[v262 + (9 -6) ]=v264;break;end end end elseif (v264>=v89[v262 + 1 ]) then local v506=0;while true do if (0==v506) then v83=v91[3];v89[v262 + 3 ]=v264;break;end end end break;end end elseif (v89[v91[2]]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==67) then for v358=v91[2],v91[3] do v89[v358]=nil;end elseif (v89[v91[2]]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=(33 + 42)) then if (v92<=71) then if (v92<=69) then if (v89[v91[2]]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==(123 -53)) then v89[v91[2]]=v73[v91[3]];else local v268=0;local v269;local v270;local v271;local v272;while true do if (v268==0) then v269=v91[2];v270,v271=v82(v89[v269](v89[v269 + (439 -(145 + 293)) ]));v268=1;end if (v268==2) then for v468=v269,v84 do local v469=0;while true do if (v469==0) then v272=v272 + 1 ;v89[v468]=v270[v272];break;end end end break;end if (1==v268) then v84=(v271 + v269) -1 ;v272=0;v268=2;end end end elseif (v92<=73) then if (v92==72) then v89[v91[432 -(44 + 386) ]]=v91[3] + v89[v91[1490 -(998 + 488) ]] ;else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92>74) then local v275=0;local v276;local v277;local v278;while true do if (v275==1) then v278=0;for v470=v276,v91[4] do local v471=0;while true do if (v471==0) then v278=v278 + 1 ;v89[v470]=v277[v278];break;end end end break;end if (v275==0) then v276=v91[2];v277={v89[v276](v89[v276 + 1 + 0 ])};v275=1;end end else do return;end end elseif (v92<=78) then if (v92<=76) then local v156=0;local v157;local v158;local v159;local v160;while true do if (v156==1) then v84=(v159 + v157) -1 ;v160=772 -(201 + 571) ;v156=2;end if (v156==0) then v157=v91[2 + 0 ];v158,v159=v82(v89[v157](v21(v89,v157 + 1 ,v84)));v156=1;end if (v156==2) then for v394=v157,v84 do local v395=0;while true do if (v395==0) then v160=v160 + 1 ;v89[v394]=v158[v160];break;end end end break;end end elseif (v92==77) then local v279=0;local v280;local v281;while true do if (v279==0) then v280=v91[2];v281={};v279=1;end if (v279==1) then for v472=1, #v88 do local v473=0;local v474;while true do if (v473==0) then v474=v88[v472];for v517=0, #v474 do local v518=0;local v519;local v520;local v521;while true do if (1==v518) then v521=v519[2];if ((v520==v89) and (v521>=v280)) then local v533=0;while true do if (v533==0) then v281[v521]=v520[v521];v519[1]=v281;break;end end end break;end if (v518==0) then v519=v474[v517];v520=v519[1];v518=1;end end end break;end end end break;end end else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=80) then if (v92==79) then v89[v91[2]]=v89[v91[3]] -v89[v91[1142 -(116 + 1022) ]] ;else local v284=v91[2];local v285=v89[v284];for v361=v284 + 1 ,v84 do v15(v285,v89[v361]);end end elseif (v92>81) then local v286=0;local v287;while true do if (v286==0) then v287=v91[2];v89[v287]=v89[v287](v89[v287 + 1 ]);break;end end elseif v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=96) then if (v92<=89) then if (v92<=85) then if (v92<=83) then v83=v91[3];elseif (v92==(349 -265)) then v89[v91[2]]=v89[v91[3]] + v91[4] ;else local v289=0;local v290;local v291;while true do if (v289==0) then v290=v91[3];v291=v89[v290];v289=1;end if (v289==1) then for v475=v290 + 1 ,v91[4] do v291=v291   .. v89[v475] ;end v89[v91[2]]=v291;break;end end end elseif (v92<=87) then if (v92>(51 + 35)) then local v292=0;local v293;local v294;local v295;while true do if (0==v292) then v293=v91[2];v294={v89[v293](v21(v89,v293 + 1 ,v84))};v292=1;end if (v292==1) then v295=0;for v476=v293,v91[4] do local v477=0;while true do if (v477==0) then v295=v295 + 1 ;v89[v476]=v294[v295];break;end end end break;end end else local v296=v91[2];v89[v296](v89[v296 + 1 ]);end elseif (v92>88) then if (v89[v91[2]]<=v91[14 -10 ]) then v83=v83 + 1 ;else v83=v91[10 -7 ];end else for v362=v91[2],v91[862 -(814 + 45) ] do v89[v362]=nil;end end elseif (v92<=92) then if (v92<=90) then local v162=0;local v163;local v164;local v165;while true do if (v162==2) then if (v164>0) then if (v165<=v89[v163 + (2 -1) ]) then v83=v91[3];v89[v163 + 1 + 2 ]=v165;end elseif (v165>=v89[v163 + 1 ]) then v83=v91[2 + 1 ];v89[v163 + 3 ]=v165;end break;end if (v162==1) then v165=v89[v163] + v164 ;v89[v163]=v165;v162=2;end if (v162==0) then v163=v91[2];v164=v89[v163 + 2 ];v162=1;end end elseif (v92>91) then local v297=v91[2];v89[v297]=v89[v297]();else v89[v91[2]]=v89[v91[888 -(261 + 624) ]];end elseif (v92<=94) then if (v92>93) then v89[v91[2]]=v89[v91[3]][v91[4]];else v89[v91[2]]();end elseif (v92>95) then v89[v91[2]]=v89[v91[3]]/v91[4] ;else v89[v91[2]]={};end elseif (v92<=103) then if (v92<=99) then if (v92<=(172 -75)) then do return v89[v91[2]];end elseif (v92==98) then v89[v91[2]]= #v89[v91[3]];else local v306=v91[2];do return v21(v89,v306,v84);end end elseif (v92<=101) then if (v92>100) then if (v89[v91[2]]<=v91[4]) then v83=v83 + (1081 -(1020 + 60)) ;else v83=v91[3];end elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==102) then if (v89[v91[1425 -(630 + 793) ]]~=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else local v307=v80[v91[3]];local v308;local v309={};v308=v18({},{[v7("\102\193\210\236\134\8\65","\109\57\158\187\130\226")]=function(v367,v368) local v369=v309[v368];return v369[1][v369[2]];end,[v7("\1\0\247\244\41\54\247\245\59\39","\145\94\95\153")]=function(v370,v371,v372) local v373=v309[v371];v373[3 -2 ][v373[2]]=v372;end});for v375=1,v91[4] do v83=v83 + 1 ;local v376=v79[v83];if (v376[1]==91) then v309[v375-1 ]={v89,v376[3]};else v309[v375-1 ]={v72,v376[3]};end v88[ #v88 + 1 ]=v309;end v89[v91[2]]=v40(v307,v308,v73);end elseif (v92<=106) then if (v92<=104) then v89[v91[2]]=v72[v91[3]];elseif (v92>(42 + 63)) then local v311=v91[2];local v312=v91[4];local v313=v311 + 2 ;local v314={v89[v311](v89[v311 + 1 ],v89[v313])};for v378=1,v312 do v89[v313 + v378 ]=v314[v378];end local v315=v314[1];if v315 then local v401=0;while true do if (v401==0) then v89[v313]=v315;v83=v91[3];break;end end else v83=v83 + 1 ;end else local v316=v91[2];do return v89[v316](v21(v89,v316 + (3 -2) ,v84));end end elseif (v92<=108) then if (v92>107) then v89[v91[2]]=v89[v91[3]];else local v319=0;local v320;local v321;while true do if (v319==1) then v89[v320 + 1 ]=v321;v89[v320]=v321[v91[4]];break;end if (v319==0) then v320=v91[2];v321=v89[v91[1750 -(760 + 987) ]];v319=1;end end end elseif (v92==109) then v89[v91[1915 -(1789 + 124) ]]=v73[v91[3]];else local v324=v89[v91[4]];if v324 then v83=v83 + 1 ;else local v402=0;while true do if (0==v402) then v89[v91[768 -(745 + 21) ]]=v324;v83=v91[3];break;end end end end v83=v83 + 1 ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--
